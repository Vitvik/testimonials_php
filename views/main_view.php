<h1>Об'єктно-орієнтовний стиль програмування</h1>
<p>
    За час існування сфери програмування виникло з десяток різних парадигм програмування, на зразок функціональна, процедурна, об'єктно-орієнтовна, аспектно-орієнтовна та деякі інші, і в процесі розвитку сфери програмування може відбуватися заміна однієї парадигми на іншу.
    Користувач на власний розсуд може вибирати ту або іншу парадигму програмування з позицій зручності застосування для вирішення власних задач.
</p>
<ul>
    <ol>Які є думки щодо переваг ООП?</ol>
</ul>


<h2>Переваги:</h2>
<ul>
    <ol>зменшення складності програмного забезпечення;</ol>
    <ol>підвищення надійності програмного забезпечення;</ol>
    <ol>можливість модифікації окремих компонентів програмного забезпечення без зміни інших його компонентів;</ol>
    <ol>забезпечення можливості повторного використання окремих компонентів програмного забезпечення;</ol>
    <ol>забезпечує кращу модульність програмного забезпечення.</ol>
</ul>

<h2>Недоліки:</h2>
<ul>
    <ol>Великі часові трудозатрати в початковій стадії розробки ООП продукту, необхідність початково спланувати роботи по розробці ООП продукту.</ol>
    <ol>Швидкість: об'єктно-орієнтованих програми працюють повільніше, ніж програми іншого напрямку, частково через їх розмір. Інші аспекти об'єктно-орієнтованих програм також вимагають більше системних ресурсів, що уповільнює роботу програми. Проте продуктивність сучасних компютерів нівелює недолік розміру програми ООП.</ol>
    <ol>Питання людських зусиль. Програмісти-новачки недолюблюють ООП через те, що необхідно докласти певних зусиль, щоб отримати мінімальний результат.</ol>
</ul>
<p>
    Як висновок, застосування програм ООП плану є зручним для написання великих програм, тут підтримується модульність частин програми, зручність оновлення, єдине перед створенням такого напрямку програм потрібно добряче спланувати роботу.
</p>
<h3>Залишити відгук</h3>
<?php if(!empty($_SESSION['session_username'])):?>
    <form class="add_message" action="#" method="post">
        <textarea name="message" rows="10" cols="30"></textarea><br>
        <input class="button" type="submit" name="user_testimonial" value="Відправити">
    </form>
<?php else:?>
<h4>Тільки зареєстровані користувачі можуть залишати відгуки.</h4>
    <p>Будь ласка увійдіть до облікового запису або зареєструйтесь.</p>
<?php endif;?>
<h3>Останні відгуки</h3>
<?php if(!empty($data)): ?>

    <table>
        <tr><td class="col1">Name</td><td class="col2">Testimonial</td><td class="col3">Date</td></tr>
        <?php foreach($data as $key => $value): ?>
            <tr>
                <?php foreach ($data[$key] as $value): ?>
                    <td>
                        <?php echo $value ?>
                    </td>
                <?php endforeach; ?>
            </tr>
        <?php endforeach; ?>
    </table>

<?php endif; ?>
